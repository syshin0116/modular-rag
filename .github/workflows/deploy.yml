name: CI/CD to Docker Hub, GCP Server

on:
  push:
    branches:
      - main  # main 브랜치에 Push 시 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. Docker Hub 로그인
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 3. Docker, Docker Compose 설치
    - name: Install Docker and Docker Compose
      run: |
        # Add Docker's official GPG key:
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    # 4. Docker Compose로 이미지 빌드
    - name: Build Docker images
      run: |
        docker compose build

    # 5. Docker 이미지 푸시
    - name: Push Docker images to Docker Hub
      run: |
        docker push syshin0116/modular-rag:fastapi-latest
        docker push syshin0116/modular-rag:nginx-latest

    # 6. GCP 서버로 배포
    - name: Deploy to GCP Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.GCP_IP }}
        username: ${{ secrets.GCP_USERNAME }}
        key: ${{ secrets.GCP_SSH_KEY }}
        script: |
          cd /home/syshin0116/modular-rag
          docker compose pull
          docker compose up -d --remove-orphans